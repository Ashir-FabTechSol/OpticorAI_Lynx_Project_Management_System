# Generated by Django 5.1.4 on 2025-07-30 14:52

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0015_taskevaluationsettings_task_completion_date_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskPriorityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Priority Name')),
                ('code', models.CharField(help_text="Unique code for this priority (e.g., 'low', 'medium', 'high')", max_length=20, unique=True, verbose_name='Priority Code')),
                ('multiplier', models.FloatField(default=1.0, help_text='Multiplier applied to quality score (e.g., 1.2 = +20%)', verbose_name='Priority Multiplier')),
                ('description', models.TextField(blank=True, help_text='Description of when to use this priority level', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this priority type is available for use', verbose_name='Active')),
                ('sort_order', models.IntegerField(default=0, help_text='Order in which priorities are displayed', verbose_name='Sort Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Task Priority Type',
                'verbose_name_plural': 'Task Priority Types',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.AlterModelOptions(
            name='qualitytype',
            options={'ordering': ['sort_order', 'name'], 'verbose_name': 'Quality Type', 'verbose_name_plural': 'Quality Types'},
        ),
        migrations.RemoveField(
            model_name='taskevaluationsettings',
            name='high_priority_multiplier',
        ),
        migrations.RemoveField(
            model_name='taskevaluationsettings',
            name='low_priority_multiplier',
        ),
        migrations.RemoveField(
            model_name='taskevaluationsettings',
            name='medium_priority_multiplier',
        ),
        migrations.AddField(
            model_name='qualitytype',
            name='description',
            field=models.TextField(blank=True, help_text='Description of this quality level', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='qualitytype',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this quality type is available for use', verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='qualitytype',
            name='sort_order',
            field=models.IntegerField(default=0, help_text='Order in which quality types are displayed', verbose_name='Sort Order'),
        ),
        migrations.AddField(
            model_name='taskevaluationsettings',
            name='formula_name',
            field=models.CharField(default='Standard Evaluation Formula', help_text='Name of the evaluation formula', max_length=100, verbose_name='Formula Name'),
        ),
        migrations.AddField(
            model_name='taskevaluationsettings',
            name='use_manager_closure_penalty',
            field=models.BooleanField(default=True, help_text='Apply penalty when manager closes incomplete task', verbose_name='Use Manager Closure Penalty'),
        ),
        migrations.AddField(
            model_name='taskevaluationsettings',
            name='use_priority_multiplier',
            field=models.BooleanField(default=True, help_text='Apply priority multiplier to quality score', verbose_name='Use Priority Multiplier'),
        ),
        migrations.AddField(
            model_name='taskevaluationsettings',
            name='use_quality_score',
            field=models.BooleanField(default=True, help_text='Include quality score in evaluation', verbose_name='Use Quality Score'),
        ),
        migrations.AddField(
            model_name='taskevaluationsettings',
            name='use_time_bonus_penalty',
            field=models.BooleanField(default=True, help_text='Apply early/late completion bonuses/penalties', verbose_name='Use Time Bonus/Penalty'),
        ),
    ]
